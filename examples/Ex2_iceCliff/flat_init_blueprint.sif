!check keywords warn
!echo on
! 
! working units are MPa, a, m
! 
! sea level
$sl0 = 0.0
! the inflow velocity at X=0 in m/a
$U0 = 800.0
! the ablation (in m/a)
$ablation = 0.0
$gradablation = 0.0
!
! derived parameter
! working units are MPa, a, mfixed constants
! 
$H0 = 680.0
$yearinsec = 365.25*24.0*60.0*60.0
$rhoi = 910.0/(1.0e6*yearinsec^2)
$rhow = 1030.0/(1.0e6*yearinsec^2)
$A = 4.6416e-25*yearinsec*1.0e18
$n = 3.0
$eta = 1.0/(2.0*A)^(1.0/n)
$gravity = -9.8*yearinsec^2
$slope = 1.0/40.0
!$C = (rhoi * gravity * H0 * slope)/U0 ! driving stress is 149 kPa
$C = 5.0e-04
$Ccoul = 1.0e-52
!$C = 3.0e-05
! the timestep
$dt = 1/52 ! 1 week
$tspan = 12 !2 * 12 * 12 * 7 ! 12 weeks
!$tspan = 1
$tout = 1              ! 1 week


$ function tangentialupdate(X) import dt{\
   _tangentialupdate = X(0) + X(1) * dt *  X(2);\
}
$ function getslipcoeff(X) import C{\
   if (X < 2000.0) {factor = 1.0;}\
   else {\
     if (X < 5000.0) {factor = 1.0 - 0.99*(X - 2000.0)/3000.0;}\
     else {factor = 0.01;}\
   }\
   _getslipcoeff = factor * C;\
}
$ function switchslipcoeff(X) import C{\
   if (X < 2000.0) {factor = 1.0;}\
   else {factor = 0.01;}\
   _switchslipcoeff = factor * C;\
}

$ function basalpressure(y) import rhow, gravity{ \
    if (y>0.0) {\
       _basalpressure = 0.0; \
    } else {\
       _basalpressure = rhow * gravity * y;\
    }\
}

Header
  Mesh DB "." "footprint"
End

Constants
  Water Density = Real $rhow
End

!---------------------------------------------------
!---------------- SIMULATION -----------------------
!---------------------------------------------------

Simulation
  Coordinate System  = Cartesian 3D 
  Simulation Type = "steady state"

  Extruded Mesh Levels = Integer 5
  Extruded Min Coordinate = 200.0

  Initialize Dirichlet Conditions = Logical False
  Steady State Max Iterations = 1
  Steady State Min Iterations = 1

  Post File = "$namerun"_.vtu" !"
  Output File = "$namerun".result" !"
  max output level = 3
  
End

!---------------------------------------------------
!---------------- BODIES ---------------------------
!---------------------------------------------------

! the ice 
Body 1
  Name = "ice"
  Equation = 1
  Body Force = 1
  Material = 1
  Initial Condition = 1
End

! The upper surface
Body 2
  Name= "top free surface"
  Equation = 2
  Material = 1
  Body Force = 2
  Initial Condition = 2
End



!---------------------------------------------------
!---------------- INITIAL CONDITIONS ---------------
!---------------------------------------------------

!! for ice 
Initial Condition 1
  Pressure = Real 0.0
  Velocity 1 = Real 0.0
  Velocity 2 = Real 0.0
  Mesh Velocity 1 = Real $U0
  Mesh Velocity 2 = Real 0.0
  Mesh Velocity 3 = Real 0.0
  Mesh Update 1 = Real 0.0
  Mesh Update 2 = Real 0.0
  Mesh Update 3 = Real 0.0
  Beta = Real $C
End

!! for top free surface
Initial Condition 2
  Zs = Equals surfaceDEM
  Reference Zs = Equals surfaceDEM
End


!---------------------------------------------------
!---------------- BODY FORCES ----------------------
!---------------------------------------------------

Body Force 1
  Flow BodyForce 1 = Real 0.0
  Flow BodyForce 2 = Real 0.0
  Flow BodyForce 3 = Real $gravity
End

!! accumulation flux in m/year
Body Force 2
   Zs Accumulation Flux 1 = Real 0.0e0
   Zs Accumulation Flux 1 = Real 0.0e0
   Zs Accumulation Flux 3 = Real $ablation !m/a
   !Zs Accumulation Flux 2 = Variable Coordinate 1
   ! Real MATC "fablation(tx)"
End


!---------------------------------------------------
!---------------- MATERIALS ------------------------
!---------------------------------------------------

!! ice material properties in MPa - m - a system 
Material 1
  Density = Real $rhoi 

  Viscosity Model = String "Glen"
  ! Viscosity has to be set to a dummy value
  ! to avoid warning output from Elmer
  Viscosity = Real 1.0 
  Glen Exponent = Real 3.0
  Critical Shear Rate = Real 1.0e-10
  ! Rate factors (Paterson value in MPa^-3a^-1)
  Rate Factor 1 = Real 1.258e13  
  Rate Factor 2 = Real 6.046e28
  ! these are in SI units - no problem, as long as
  ! the gas constant also is 
  Activation Energy 1 = Real 60e3
  Activation Energy 2 = Real 139e3  
  Glen Enhancement Factor = Real 1.0
  ! the variable taken to evaluate the Arrhenius law
  ! in general this should be the temperature relative
  ! to pressure melting point. The suggestion below plugs
  ! in the correct value obtained with TemperateIceSolver
  !Temperature Field Variable = String "Temp"
  Constant Temperature = Real -9.0
  ! the temperature to switch between the 
  ! two regimes in the flow law
  Limit Temperature = Real -10.0

  Sea Level = Real $sl0
!  Sea Level = Variable Coordinate 1
!    Real MATC "sealevel(tx)"

  Min Zs = Variable "Zb"    
    Real MATC "tx + 8.0"                          
    Max Zs = Real 100.0
End

!---------------------------------------------------
!---------------- SOLVERS --------------------------
!---------------------------------------------------
Solver 1
  Exec Solver = "Before Simulation"
  Equation = "Read DEMs"!

 ! Bedrock variable
  Procedure = "ElmerIceSolvers" "Grid2DInterpolator"

  Variable 1 = String "surfaceDEM"
  Variable 1 data file = File "surface.xyz" 
  Variable 1 x0 = Real 0.0 
  Variable 1 y0 = Real -250.0
  Variable 1 lx = Real 1000.0
  Variable 1 ly = Real 500.0
  Variable 1 Nx = Integer 101
  Variable 1 Ny = Integer 51
  Variable 1 Invert = Logical True
  Variable 1 Fill = Logical False
  Variable 1 Position Tol = Real 0.0001 
  Variable 1 no data tol = Real 0.0001

  Variable 2 = String "bedrockDEM"
  Variable 2 data file = File "bedrock.xyz" 
  Variable 2 x0 = Real 0.0 
  Variable 2 y0 = Real -250.0
  Variable 2 lx = Real 1000.0
  Variable 2 ly = Real 500.0
  Variable 2 Nx = Integer 101
  Variable 2 Ny = Integer 51
  Variable 2 Invert = Logical True
  Variable 2 Fill = Logical False
  Variable 2 Position Tol = Real 0.0001 
  Variable 2 no data tol = Real 0.0001
End

Solver 2
!! HERE TO CREATE EXPORTED VARIABLES AND 
!  INITIALISATION OF VELOCITY AND TopAccumulation in BODY FORCES
  !Exec Solver = Before Simulation

  Equation = "UpdateExport"
  Procedure = File "ElmerIceSolvers" "UpdateExport"
  Variable = -nooutput "dummy"

  Exported Variable 1 = -dofs 1 "surfaceDEM"
  Exported Variable 2 = -dofs 1 "bedrockDEM"
  Exported Variable 3 = -dofs 1 "Beta"
End

Solver 3
  Exec Solver = "always"
  
  Equation = "MapCoordinate"
  Procedure = "StructuredMeshMapper" "StructuredMeshMapper"

  !Variable = -nooutput StructDummy
  !Mapping Mask Variable = String "Depth"
  Active Coordinate = Integer 3 ! the mesh-update is z-direction

! For time being this is currently externally allocated
!  Mesh Velocity Variable = String "Mesh Velocity 3"

! The 1st value is special as the mesh velocity could be unrelistically high
!  Mesh Velocity First Zero = Logical True

  Dot Product Tolerance = Real 0.1
  Correct Surface = Logical True
  Minimum Height = Real 10.0
!  Exported Variable 1 = -dofs 3 "Mesh Velocity" 
End

Solver 4 
    Exec Solver = "Before Simulation"
    Equation = "GetWeights"
    Procedure = "getweights" "getWeights"
    Variable = -dofs 1 "weight"
End

Solver 5
   Equation = "Flowdepth"
   !Exec Solver = "Never"
   Procedure = File "ElmerIceSolvers" "FlowDepthSolver"
   Variable = String "Depth"
   Variable DOFs = 1
   Linear System Solver = "Direct"
   Linear System Direct Method = "MUMPS"
   ! this sets the direction
   ! -1 is negative z-direction (upside down)
   ! +1 is positive (downside up)
   Gradient = Real -1.0E00
  ! switch that to True, if you want to have 
  ! free surface gradients to be computed
  !------------------------------------
  Calc Free Surface = Logical False
  ! the name for the exported (if not existing) added variable
  ! the gradients will be stored in variables with the base
  ! name given and "Grad1" and (in 3 dimensions) "Grad2" added,
  ! so in our case "FreeSurfGrad1" and "FreeSurfGrad2"
  ! again, if those variables did not exist, they will be
  ! automatically created
  !-----------------------------------------------------------
  !Freesurf Name = String "FreeSurf"
End
 
Solver 6
   Equation = "Flowheight"
   !Exec Solver = "Never"
   Procedure = File "ElmerIceSolvers" "FlowDepthSolver"
   Variable = String "Height"
   Variable DOFs = 1
   Linear System Solver = "Direct"
   Linear System Direct Method = "MUMPS"
   ! this sets the direction
   ! -1 is negative z-direction (upside down)
   ! +1 is positive (downside up)
   Gradient = Real 1.0E00
  ! switch that to True, if you want to have 
  ! free surface gradients to be computed
  !------------------------------------
  Calc Free Surface = Logical False
  ! the name for the exported (if not existing) added variable
  ! the gradients will be stored in variables with the base
  ! name given and "Grad1" and (in 3 dimensions) "Grad2" added,
  ! so in our case "FreeSurfGrad1" and "FreeSurfGrad2"
  ! again, if those variables did not exist, they will be
  ! automatically created
  !-----------------------------------------------------------
  !Freesurf Name = String "FreeSurf"
End 

Solver 7
  Exec Solver = "Never"
  Equation = "NormalVector"
  Procedure = "ElmerIceSolvers" "ComputeNormalSolver"
  Variable = String "Normal Vector"
  Variable DOFs = 2

  ComputeAll = Logical False
  Optimize Bandwidth = Logical False
End

Solver 8
  Equation = "Navier-Stokes"
  Exec Solver = never
  Linear System Solver = Direct     
  Linear System Direct Method = umfpack

  Nonlinear System Max Iterations = 50
  Nonlinear System Convergence Tolerance  = 1.0e-5
  Nonlinear System Newton After Iterations = 5 
  Nonlinear System Newton After Tolerance = 1.0e-02
  Nonlinear System Relaxation Factor = 1.00
  Nonlinear System Reset Newton = Logical True
    
  Steady State Convergence Tolerance = Real 1.0e-4

  Stabilization Method = String Bubbles

  Exported Variable 1 = Flow Solution Loads[Stress Vector:3 CEQ Residual:1] 
  Calculate Loads = Logical True


 

  Flow Model = String "Stokes"
End


Solver 9
  Exec Solver = "Never"
  Equation = "Free Surface Top"
  Procedure =  "FreeSurfaceSolver" "FreeSurfaceSolver"
  Variable = "Zs"
  ALE Formulation = Logical True ! we can have a sidewards moving mesh
  Variable DOFs =  1
  Exported Variable 1 = "Zs Residual"
  Exported Variable 1 DOFs = 1
  Exported Variable 2 = "Reference Zs"
  Exported Variable 2 DOFs = 1
!  Before Linsolve = "EliminateDirichlet" "EliminateDirichlet"

  Linear System Solver = Iterative
  Linear System Direct Method = UMFPACK
  Linear System Max Iterations = 1500
  Linear System Iterative Method = BiCGStab
  Linear System Preconditioning = ILU0
  Linear System Convergence Tolerance = Real 1.0e-6
  Linear System Abort Not Converged = False
  Linear System Residual Output = 1

  Nonlinear System Max Iterations = 100
  Nonlinear System Convergence Tolerance  = 1.0e-5
  Nonlinear System Relaxation Factor = 1.00

  Steady State Convergence Tolerance = 1.0e-03

  Stabilization Method = Stabilized
  Apply Dirichlet = Logical True

  Relaxation Factor = Real 1.0
End 

Solver 10
  Equation = String "StressSolver"
  Procedure =  File "ElmerIceSolvers" "ComputeDevStress"
  Exec Solver = "After Simulation"
  ! this is just a dummy, hence no output is needed
  !-----------------------------------------------------------------------
  Variable = -nooutput "Sij"
  Variable DOFs = 1

  ! the name of the variable containing the flow solution (U,V,W,Pressure)
  !-----------------------------------------------------------------------
  Flow Solver Name = String "Flow Solution"
  Exported Variable 1 = "Stress" ! [Sxx, Syy, Szz, Sxy] in 2D
                                 ! [Sxx, Syy, Szz, Sxy, Syz, Szx] in 3D
  Exported Variable 1 DOFs = 6   ! 4 in 2D, 6 in 3D
  Stress Variable Name = String "Stress"
  Linear System Solver = "Iterative"
  Linear System Iterative Method = "BiCGStab"
  Linear System Max Iterations = 300
  Linear System Convergence Tolerance = 1.0E-09
  Linear System Abort Not Converged = True
  Linear System Preconditioning = "ILU0"
  Linear System Residual Output = 1
End

!Solver 15
!  Equation = "ExportVertically"
!  Procedure = File "ElmerIceSolvers" "ExportVertically"
!  Variable = String "VerticalSlidPrior"
!  Variable DOFs = 1
!  Linear System Solver = Direct
!  Linear System Direct Method = mumps
!  mumps percentage increase working space = integer 60
!End

Solver 11
  Exec Solver = "After Simulation"
  Equation = "Gridded Output"
  Procedure = File  "SaveGridData" "SaveGridData"

  Filename Prefix= "$namerun"_grid" !"
  Table Format = Logical True
  Check for Duplicates  = Logical True
  Grid dx = Real 10.0
  Grid Origin 1 = Real -10.0
  Grid Origin 2 = Real -250.0
  Grid Origin 3 = Real 0.0
  Min Coordinate 1 = Real 0.0!600.0
  Min Coordinate 2 = Real -250.0
  !Min Coordinate 3 = Real 0.0
  Max Coordinate 1 = Real 1100!1200.0
  Max Coordinate 2 = Real 250.0
  Mask Name = String "savegrid"
  End

!---------------------------------------------------
!---------------- EQUATIONS ------------------------
!---------------------------------------------------

Equation 1 ! for glacier bulk
  Active Solvers (10) = 1 2 3 4 5 6 7 8 10 11
End

Equation 2 ! for free surface
  Active Solvers(1) = 9
  Flow Solution Name = String "Flow Solution"
  Convection = String Computed
End 


!---------------------------------------------------
!---------------- BOUNDARY CONDITIONS --------------
!---------------------------------------------------



!! BC Lateral Ice-Shelf (air or sea contact)
Boundary Condition 1
  Name = "front"
  Target Boundaries = 1

  Flow Force BC = Logical True
  External Pressure = Variable Coordinate 2
     Real Procedure "ElmerIceUSF" "SeaPressure"
  !Mesh Update 1 = Variable Mesh Update 1, Velocity 1
  !  Real MATC "tx(0) + tx(1) * dt"  
  Mesh Update 1 = Variable Mesh Update 1, weight, Velocity 1
       Real MATC "tangentialupdate(tx)"
  !Mesh Update 2 = Variable Mesh Update 1, weight, Velocity 2
  !     Real MATC "tangentialupdate(tx)"
  Mesh Update 2 = 0.0
  Compute Sea Pressure = Logical True
  ComputeNormal = Logical True
End

!! Symetry axis
Boundary Condition 2
  Name = "back"
  Target Boundaries = 3
  Velocity 1 = $U0
  Velocity 2 = 0.0
  Mesh Update 1 = 0.0
  Mesh Update 2 = 0.0
  Mesh Update 3 = 0.0
  ComputeNormal = Logical False
End

Boundary Condition 3
  Name = "sides"
  Target Boundaries(2) = 2 4
  Mesh Update 1 = Variable Mesh Update 1, weight, Velocity 1
       Real MATC "tangentialupdate(tx)"
  Mesh Update 2 = 0.0
!  Mesh Update 2 = Variable Mesh Update 1, weight, Velocity 2
!       Real MATC "tangentialupdate(tx)"
  ComputeNormal = Logical False
  Velocity 2 = 0.0
  Slip Coefficient 1 = $ 0.01 * C
End

!! BC  Bedrock + Shelf
Boundary Condition 4
  Name = "bottom"
  Normal-Tangential Velocity = Logical True
  Flow Force BC = Logical True

!
! Condition where the bed is stuck
!
  Bottom Surface = Equals bedrockDEM
  Mesh Update 1 = Variable Mesh Update 1, weight, Velocity 1
       Real MATC "tangentialupdate(tx)"
!   Mesh Update 2 = Variable Mesh Update 1, weight, Velocity 2
!       Real MATC "tangentialupdate(tx)"
  Mesh Update 2 = 0.0
  Mesh Update 3 = 0.0
!
! Bedrock conditions
!
  Slip Coefficient 2 = Variable Coordinate 1
    Real Procedure "ElmerIceUSF" "SlidCoef_Contact"
   Slip Coefficient 3 = Variable Coordinate 1
    Real Procedure "ElmerIceUSF" "SlidCoef_Contact"
 ! WEERTMAN
  Sliding Law = String "Weertman" 
  Weertman Friction Coefficient = Real $C
  !!Weertman Exponent = Real $(1.0/n)
  Weertman Exponent = Real 1.0
  Weertman Linear Velocity = Real 0.001
 !COULOMB
  !Sliding Law = String "Coulomb"
  !Friction Law Sliding Coefficient = Variable Coordinate 1
  !    Real MATC "sliding(tx)"
  !Friction Law Sliding Coefficient = Real $Ccoul
  !Friction Law Post-Peak Exponent = Real 2.0
  !Friction Law Linear Velocity = Real 0.001
  !Friction Law Maximum Value = Real 1.0
  !Friction Law PowerLaw Exponent = Real 3.0
  !External Pressure = Variable Coordinate 2
  !      Real MATC "-basalpressure(tx)"


  ! Options are 'Last Grounded' (default), 'First Floating' or 'Discontinuous' 
  ! Grounding Line Definition = String "Last Grounded"
    Grounding Line Definition = String "Discontinuous"
  !Grounding Line Definition = String "First Floating"
  Test Contact Tolerance = real 1.0e-3

  Velocity 1 = Real 0.0
! Shelf conditions

  Height = Real 0.0
End

!! BC  Free surface Top
Boundary Condition 5
  Name = "top"
  Body Id = 2
  Depth = Real 0.0
  ComputeNormal = Logical False
  Mesh Update 1 = Variable Mesh Update 1, weight, Velocity 1
       Real MATC "tangentialupdate(tx)"
  !Mesh Update 2 = Variable Mesh Update 1, weight, Velocity 2
  !     Real MATC "tangentialupdate(tx)"
  Mesh Update 2 = 0.0
  Mesh Update 3  = Variable Zs, Reference Zs
    Real MATC "tx(0) - tx(1)"
  !Top Surface = Equals Coordinate 3
  !Top Surface = Variable Coordinate 1
  !  Real Procedure "bedrockfunction_flat" "initsurface"
  Top Surface = Equals "surfaceDEM"
  Save Surf = Logical True
  savegrid = Real 1.0
End